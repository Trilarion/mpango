<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

	<!-- Enables annotation based configuration -->
	<context:annotation-config />
	
	<!-- scans for annotated components -->
	<context:component-scan base-package="net.sourceforge.mpango" />
	
	<!-- Allows replacement in the spring xml configuration -->
	<context:property-placeholder location="classpath:/system.properties" />
	
	<!-- creates an activemq connection factory using the amq namespace -->
	<amq:connectionFactory 
		id="amqConnectionFactory" 
		brokerURL="${jms.url}" 
		userName="${jms.username}" 
		password="${jms.password}" />
	
	<!-- CachingConnectionFactory Definition, sessionCacheSize property is the number of sessions to cache -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
	    <constructor-arg ref="amqConnectionFactory" />
		<property name="exceptionListener" ref="jmsExceptionListener" />
		<property name="sessionCacheSize" value="100" />
	</bean>

	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
	   <constructor-arg ref="connectionFactory"/>
	</bean>
	
	<!-- listener container definition using the jms namespace, concurrency is the max number of concurrent listeners that can be started -->
	<jms:listener-container concurrency="10" >
		<jms:listener id="QueueListener" destination="Queue.Name" ref="queueListener" />
	</jms:listener-container>
	
	<bean id="datasource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/datasource" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="configLocation" value="WEB-INF/hibernate.cfg.xml" />
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="gameboard" class="net.sourceforge.romulan.GameBoard"> -->
	<!-- <constructor-arg index="0" value="3" /> -->
	<!-- <constructor-arg index="1" value="3" /> -->
	<!-- </bean> -->

	<bean name="userDAO" class="net.sourceforge.mpango.directory.UserDAOHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="helloWorldBacking" class="net.sourceforge.mpango.web.HelloWorldBacking"
		scope="request">
		<property name="userDAO" ref="userDAO" />
	</bean>

	<bean id="userBackingBean" class="net.sourceforge.mpango.directory.web.UserBackingBean"
		scope="request">
		<property name="userDAO" ref="userDAO" />
	</bean>
</beans>
